{"ast":null,"code":"var _jsxFileName = \"/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport \"./sign-in.styles.scss\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    emailSignInStart({\n      email,\n      password\n    }); //dispatch emailSignInStart action\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Sign in with your e-mail and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    required: \"required\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    required: \"required\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Sign in\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-lg fa-sign-in\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 72\n    }\n  })), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Sign in with Google\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-lg fa-google\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: userCredentials => dispatch(emailSignInStart(userCredentials)) //pass email password as object with email/password key-value pairs\n\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","userCredentials","setCredentials","email","password","handleChange","e","name","value","target","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport \"./sign-in.styles.scss\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart,emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nconst SignIn =({emailSignInStart,googleSignInStart})=>{\n    \n    const [userCredentials,setCredentials]= useState({email:'',password:''});\n\n    const { email, password } = userCredentials;\n    \n    const handleChange=e=>{\n        const{name,value}=e.target;\n        setCredentials({...userCredentials,[name]:value})\n\n    }\n    \n    const handleSubmit= e=>{\n        e.preventDefault();\n        \n        emailSignInStart({email,password}); //dispatch emailSignInStart action\n    }\n\n    \n        return (\n            <div className=\"sign-in\">\n                <h2 className=\"title\">I already have an account</h2>\n                <span>Sign in with your e-mail and password</span>\n\n                <form onSubmit={handleSubmit}>\n\n                    <FormInput type=\"email\" label=\"Email\" name=\"email\"required=\"required\" onChange={handleChange} value={email}/>\n                    <FormInput type=\"password\" label=\"Password\" name=\"password\"required=\"required\" onChange={handleChange} value={password}/>\n\n                    <div className=\"buttons\">\n                        <CustomButton type=\"submit\">Sign in&nbsp;&nbsp;<i className=\"fa fa-lg fa-sign-in\" aria-hidden=\"true\"></i></CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign in with Google&nbsp;&nbsp;\n                            <i className=\"fa fa-lg fa-google\" aria-hidden=\"true\"></i>\n                        </CustomButton>\n                    </div>\n                    \n                </form>\n            </div>\n        )\n    }\n\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: ()=>dispatch(googleSignInStart()),\n    emailSignInStart: userCredentials=> dispatch(emailSignInStart(userCredentials))  //pass email password as object with email/password key-value pairs\n});\n\nexport default connect(null,mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}