{"ast":null,"code":"/* eslint-disable eqeqeq */\nimport { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; // include redux-saga middleware\n\nif (process.env.NODE_ENV == \"development\") middlewares.push(logger);\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nconst persistedStore = persistStore(store); //now we will be able to cache store data, we also have to make persist reducer in root-reducer \n\nexport { store, persistedStore };","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistedStore"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAAwC;;AAExC,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,IAAuB,aAA1B,EACIH,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AAEJ,MAAMW,KAAK,GAAGb,WAAW,CAACG,WAAD,EAAaF,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,MAAMS,cAAc,GAAGX,YAAY,CAACS,KAAD,CAAnC,C,CAA8C;;AAE9C,SAASA,KAAT,EAAeE,cAAf","sourcesContent":["/* eslint-disable eqeqeq */\nimport {createStore, applyMiddleware} from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport {persistStore} from 'redux-persist';\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./root-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];   // include redux-saga middleware\n\nif(process.env.NODE_ENV ==\"development\")\n    middlewares.push(logger);\n\nconst store = createStore(rootReducer,applyMiddleware(...middlewares));\n\nsagaMiddleware.run(rootSaga);\n\nconst persistedStore = persistStore(store);   //now we will be able to cache store data, we also have to make persist reducer in root-reducer \n\nexport  {store,persistedStore};"]},"metadata":{},"sourceType":"module"}