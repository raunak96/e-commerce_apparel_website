{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nconst INITAL_STATE = {\n  collections: null,\n  isFetching: false,\n  // tells whether collection is being fetched from firestore\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = INITAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      //there is no need for this as redux-saga middleware is listening for this action..just as precaution it is written\n      return { ...state,\n        isFetching: true\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        collections: action.payload,\n        isFetching: false,\n        errorMessage: null\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","INITAL_STATE","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAG,IADG;AAEjBC,EAAAA,UAAU,EAAG,KAFI;AAEK;AACtBC,EAAAA,YAAY,EAAEC;AAHG,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,YAAP,EAAqBO,MAArB,KAAgC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,uBAArB;AAAgD;AAC5C,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,UAAU,EAAE;AAFT,OAAP;;AAIJ,SAAKH,eAAe,CAACW,yBAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,WAAW,EAACM,MAAM,CAACI,OAFhB;AAGHT,QAAAA,UAAU,EAAE,KAHT;AAIHC,QAAAA,YAAY,EAAE;AAJX,OAAP;;AAMJ,SAAKJ,eAAe,CAACa,yBAArB;AACI,aAAM,EACF,GAAGN,KADD;AAEFJ,QAAAA,UAAU,EAAC,KAFT;AAGFC,QAAAA,YAAY,EAAEI,MAAM,CAACI;AAHnB,OAAN;;AAKJ;AACI,aAAOL,KAAP;AApBR;AAsBH,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nconst INITAL_STATE = {\n    collections : null,\n    isFetching : false,   // tells whether collection is being fetched from firestore\n    errorMessage: undefined\n};\n\nconst shopReducer = (state=INITAL_STATE, action) => {\n    switch (action.type) {\n        case ShopActionTypes.FETCH_COLLECTIONS_START:   //there is no need for this as redux-saga middleware is listening for this action..just as precaution it is written\n            return {\n                ...state,\n                isFetching: true\n            }\n        case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n            return {\n                ...state,\n                collections:action.payload,\n                isFetching: false,\n                errorMessage: null\n            }\n        case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n            return{\n                ...state,\n                isFetching:false,\n                errorMessage: action.payload \n            }\n        default:\n            return state;\n    }\n};\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}