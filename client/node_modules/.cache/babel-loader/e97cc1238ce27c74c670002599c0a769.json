{"ast":null,"code":"var _jsxFileName = \"/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('Passwords don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Sign Up with your Email and Password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    label: \"Display Name\",\n    name: \"displayName\",\n    required: \"required\",\n    onChange: handleChange,\n    value: displayName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    label: \"Email\",\n    name: \"email\",\n    required: \"required\",\n    onChange: handleChange,\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    label: \"Password\",\n    name: \"password\",\n    required: \"required\",\n    onChange: handleChange,\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    required: \"required\",\n    onChange: handleChange,\n    value: confirmPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Sign Up\\xA0\\xA0\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-lg fa-user-plus\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 64\n    }\n  }))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,MAAMC,MAAM,GAAE,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAkB;AAE5B,QAAM,CAACE,eAAD,EAAiBC,cAAjB,IAAiCP,QAAQ,CAAC;AACxCQ,IAAAA,WAAW,EAAC,EAD4B;AAExCC,IAAAA,KAAK,EAAC,EAFkC;AAGxCC,IAAAA,QAAQ,EAAC,EAH+B;AAIxCC,IAAAA,eAAe,EAAC;AAJwB,GAAD,CAA/C;AAOA,QAAM;AAACH,IAAAA,WAAD;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,QAApB;AAA8BC,IAAAA;AAA9B,MAAgDL,eAAtD;;AAEA,QAAMM,YAAY,GAAEC,CAAC,IAAG;AACpBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAGJ,QAAQ,KAAGC,eAAd,EAA8B;AAC1BI,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACA;AACH;;AACDX,IAAAA,WAAW,CAAC;AAACK,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAiBF,MAAAA;AAAjB,KAAD,CAAX;AAEH,GATD;;AAWA,QAAMQ,YAAY,GAAGH,CAAC,IAAI;AACtB,UAAM;AAACI,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAcL,CAAC,CAACM,MAAtB;AACAZ,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAqB,OAACW,IAAD,GAASC;AAA9B,KAAD,CAAd;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFJ,eAGI;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,cAA7B;AAA4C,IAAA,IAAI,EAAC,aAAjD;AAA+D,IAAA,QAAQ,EAAC,UAAxE;AAAmF,IAAA,QAAQ,EAAEI,YAA7F;AAA2G,IAAA,KAAK,EAAER,WAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,KAAK,EAAC,OAA9B;AAAsC,IAAA,IAAI,EAAC,OAA3C;AAAkD,IAAA,QAAQ,EAAC,UAA3D;AAAsE,IAAA,QAAQ,EAAEQ,YAAhF;AAA8F,IAAA,KAAK,EAAEP,KAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,UAAjC;AAA4C,IAAA,IAAI,EAAC,UAAjD;AAA2D,IAAA,QAAQ,EAAC,UAApE;AAA+E,IAAA,QAAQ,EAAEO,YAAzF;AAAuG,IAAA,KAAK,EAAEN,QAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAII,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,kBAAjC;AAAoD,IAAA,IAAI,EAAC,iBAAzD;AAA0E,IAAA,QAAQ,EAAC,UAAnF;AAA8F,IAAA,QAAQ,EAAEM,YAAxG;AAAsH,IAAA,KAAK,EAAEL,eAA7H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAA+C;AAAG,IAAA,SAAS,EAAC,uBAAb;AAAqC,mBAAY,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/C,CALJ,CAHJ,CADJ;AAaH,CAxCD;;AAyCA,MAAMS,kBAAkB,GAAIC,QAAD,KAAa;AACpCjB,EAAAA,WAAW,EAAEE,eAAe,IAAGe,QAAQ,CAACjB,WAAW,CAACE,eAAD,CAAZ;AADH,CAAb,CAA3B;;AAGA,eAAeH,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCf,MAAjC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp =({signUpStart})=> {\n    \n    const [userCredentials,setCredentials]=useState({\n            displayName:'',\n            email:'',\n            password:'',\n            confirmPassword:''\n        });\n           \n    const {displayName,email, password, confirmPassword}= userCredentials;\n \n    const handleSubmit= e =>{\n        e.preventDefault();\n\n        if(password!==confirmPassword){\n            alert('Passwords don\\'t match');\n            return;\n        }\n        signUpStart({email, password,displayName});\n        \n    }\n\n    const handleChange = e => {\n        const {name,value}= e.target;\n        setCredentials({ ...userCredentials,[name] : value });\n    }\n\n    return (\n        <div className = \"sign-up\">\n            <h2 className=\"title\">I do not have an account</h2>\n            <span>Sign Up with your Email and Password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput type=\"text\" label=\"Display Name\" name=\"displayName\" required=\"required\" onChange={handleChange} value={displayName}/>\n                <FormInput type=\"email\" label=\"Email\" name=\"email\"required=\"required\" onChange={handleChange} value={email}/>\n                <FormInput type=\"password\" label=\"Password\" name=\"password\"required=\"required\" onChange={handleChange} value={password}/>\n                <FormInput type=\"password\" label=\"Confirm Password\" name=\"confirmPassword\"required=\"required\" onChange={handleChange} value={confirmPassword}/>\n                <CustomButton type=\"submit\">Sign Up&nbsp;&nbsp;<i className=\"fa fa-lg fa-user-plus\" aria-hidden=\"true\"></i></CustomButton>\n            </form>\n        </div>\n    )\n}\nconst mapDispatchToProps = (dispatch)=>({\n    signUpStart: userCredentials =>dispatch(signUpStart(userCredentials))\n});\nexport default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}