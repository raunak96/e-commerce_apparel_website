{"ast":null,"code":"import { call, takeLatest, put, all } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getUserinSession } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\n\nfunction* getUserSnapShotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n} // PERFORMS GOOGLE SIGN IN AS SOON AS GOOGLE_SIGN_IN_START action is dispatched which happens as soon as user clicks sign-in-with-Google button\n\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); // this user key of object returned is the User reference\n\n    yield call(getUserSnapShotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // PERFORMS EMAIL SIGN IN AS SOON AS EMAIL_SIGN_IN_START action is dispatched which happens as soon as user clicks sign-in button\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  // below function catches action EMAIL_SIGN_IN_START which has email/password as payload, hence we destructure these properties to use them\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield call(getUserSnapShotFromUserAuth, user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* onEamilSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n} //SIGNUP LOGIC\n\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n} // LOGIC TO SIGN IN AFTER SIGN-UP SUCCESSFUL\n\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getUserSnapShotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n} // CHECKS USER IN SESSION when action CHECK_USER_IN_SESSION is dispatched which happens as soon as APP component is mounted\n\nexport function* isUserInSession() {\n  try {\n    const userAuth = yield getUserinSession();\n    if (!userAuth) return;\n    yield call(getUserSnapShotFromUserAuth, userAuth);\n  } catch (error) {\n    yield put(signInFailure);\n  }\n}\nexport function* onCheckUserInSesion() {\n  yield takeLatest(UserActionTypes.CHECK_USER_IN_SESSION, isUserInSession);\n} // SIGNS OUT USER When signOut btn clicked and SIGN_OUT_START action dispatched\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n} // All above sagas combined to form USER-SAGAS\n\nexport default function* UserSagas() {\n  yield all([call(onGoogleSignInStart), call(onEamilSignInStart), call(onCheckUserInSesion), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/redux/user/user.sagas.js"],"names":["call","takeLatest","put","all","UserActionTypes","googleProvider","auth","createUserProfileDocument","getUserinSession","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getUserSnapShotFromUserAuth","user","additionalData","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEamilSignInStart","EMAIL_SIGN_IN_START","signUp","displayName","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","isUserInSession","userAuth","onCheckUserInSesion","CHECK_USER_IN_SESSION","signOut","onSignOutStart","SIGN_OUT_START","UserSagas"],"mappings":"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","sourcesContent":["import {call,takeLatest,put,all} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {googleProvider, auth, createUserProfileDocument, getUserinSession} from \"../../firebase/firebase.utils\";\nimport { signInSuccess,signInFailure, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.actions';\n\nfunction* getUserSnapShotFromUserAuth(user,additionalData){\n    try {\n        const userRef= yield call(createUserProfileDocument,user,additionalData);\n        const userSnapshot= yield userRef.get();\n        yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}));\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n}\n\n// PERFORMS GOOGLE SIGN IN AS SOON AS GOOGLE_SIGN_IN_START action is dispatched which happens as soon as user clicks sign-in-with-Google button\nexport function* signInWithGoogle(){\n    try {\n        const {user}= yield auth.signInWithPopup(googleProvider);  // this user key of object returned is the User reference\n        yield call(getUserSnapShotFromUserAuth,user);\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n    \n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\n}\n\n// PERFORMS EMAIL SIGN IN AS SOON AS EMAIL_SIGN_IN_START action is dispatched which happens as soon as user clicks sign-in button\nexport function* signInWithEmail({payload:{email,password}}){   // below function catches action EMAIL_SIGN_IN_START which has email/password as payload, hence we destructure these properties to use them\n    try {\n        const {user}= yield auth.signInWithEmailAndPassword(email,password);\n        yield call(getUserSnapShotFromUserAuth,user);\n\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n}\nexport function* onEamilSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n}\n\n//SIGNUP LOGIC\nexport function* signUp({payload: { email,password,displayName }}){\n    try {\n        const {user}= yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\n    } catch (error) {\n        yield put(signUpFailure(error.message));\n    }\n}\nexport function* onSignUpStart(){\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp);\n}\n\n// LOGIC TO SIGN IN AFTER SIGN-UP SUCCESSFUL\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\n    yield getUserSnapShotFromUserAuth(user,additionalData);\n}\nexport function* onSignUpSuccess(){\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp);\n}\n\n// CHECKS USER IN SESSION when action CHECK_USER_IN_SESSION is dispatched which happens as soon as APP component is mounted\nexport function* isUserInSession(){\n    try {\n        const userAuth=yield getUserinSession();\n        if(!userAuth)\n            return;\n        yield call(getUserSnapShotFromUserAuth,userAuth);\n    } catch (error) {\n        yield put(signInFailure);\n    }\n}\nexport function* onCheckUserInSesion(){\n    yield takeLatest(UserActionTypes.CHECK_USER_IN_SESSION,isUserInSession)\n}\n\n// SIGNS OUT USER When signOut btn clicked and SIGN_OUT_START action dispatched\nexport function* signOut(){\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error.message));\n    }\n}\nexport function* onSignOutStart(){\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut);\n}\n\n// All above sagas combined to form USER-SAGAS\nexport default function* UserSagas(){\n    yield all([call(onGoogleSignInStart),call(onEamilSignInStart),call(onCheckUserInSesion),call(onSignOutStart),call(onSignUpStart),call(onSignUpSuccess)]);\n}\n"]},"metadata":{},"sourceType":"module"}