{"ast":null,"code":"var _jsxFileName = \"/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from 'react-redux';\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({\n  price,\n  clearEntireCart\n}) => {\n  const priceInPaise = price * 100;\n  const publishableKey = process.env.REACT_APP_PUBLISHABLE_KEY;\n\n  const onToken = async token => {\n    try {\n      await axios({\n        url: \"payment\",\n        method: \"post\",\n        data: {\n          amount: priceInPaise,\n          token\n        }\n      });\n      alert(\"Payment Successful\");\n      clearEntireCart();\n    } catch (error) {\n      console.log('Payment Error: ', JSON.parse(error));\n      alert(\"There was an issue with your payment. Please make sure you used the correct card.\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Rawn Apparels Ltd.\",\n    billingAddress: true,\n    shippingAddress: true,\n    currency: \"INR\",\n    image: \"http://svgshare.com/i/CUz.svg\",\n    description: `Your grand Total is ₹ ${price}`,\n    amount: priceInPaise,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearEntireCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","connect","clearCart","axios","StripeCheckoutButton","price","clearEntireCart","priceInPaise","publishableKey","process","env","REACT_APP_PUBLISHABLE_KEY","onToken","token","url","method","data","amount","alert","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAQC,EAAAA;AAAR,CAAD,KAA+B;AACxD,QAAMC,YAAY,GAAGF,KAAK,GAAG,GAA7B;AACA,QAAMG,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAAnC;;AAEA,QAAMC,OAAO,GAAC,MAAMC,KAAN,IAAa;AACvB,QAAI;AACA,YAAMV,KAAK,CAAC;AACRW,QAAAA,GAAG,EAAE,SADG;AAERC,QAAAA,MAAM,EAAE,MAFA;AAGRC,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAEV,YADN;AAEFM,UAAAA;AAFE;AAHE,OAAD,CAAX;AAQAK,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAZ,MAAAA,eAAe;AAClB,KAXD,CAWE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA9B;AACAD,MAAAA,KAAK,CAAC,mFAAD,CAAL;AACH;AAEJ,GAjBD;;AAkBA,sBACI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,IAAI,EAAC,oBAFT;AAGI,IAAA,cAAc,MAHlB;AAII,IAAA,eAAe,MAJnB;AAKI,IAAA,QAAQ,EAAC,KALb;AAMI,IAAA,KAAK,EAAC,+BANV;AAOI,IAAA,WAAW,EAAG,yBAAwBb,KAAM,EAPhD;AAQI,IAAA,MAAM,EAAEE,YARZ;AASI,IAAA,UAAU,EAAC,SATf;AAUI,IAAA,KAAK,EAAEK,OAVX;AAWI,IAAA,SAAS,EAAEJ,cAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH,CArCD;;AAuCA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACtCnB,EAAAA,eAAe,EAAE,MAAMmB,QAAQ,CAACvB,SAAS,EAAV;AADO,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAMuB,kBAAN,CAAP,CAAiCpB,oBAAjC,CAAf","sourcesContent":["import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport {connect} from 'react-redux';\nimport { clearCart } from \"../../redux/cart/cart.actions\";\nimport axios from \"axios\";\n\nconst StripeCheckoutButton = ({ price,clearEntireCart }) => {\n    const priceInPaise = price * 100;\n    const publishableKey = process.env.REACT_APP_PUBLISHABLE_KEY;\n    \n    const onToken=async token=>{\n        try {\n            await axios({\n                url: \"payment\",\n                method: \"post\",\n                data: {\n                    amount: priceInPaise,\n                    token,\n                },\n            });\n            alert(\"Payment Successful\");\n            clearEntireCart();\n        } catch (error) {\n            console.log('Payment Error: ',JSON.parse(error));\n            alert(\"There was an issue with your payment. Please make sure you used the correct card.\");\n        }\n        \n    }\n    return (\n        <StripeCheckout\n            label=\"Pay Now\"\n            name=\"Rawn Apparels Ltd.\"\n            billingAddress\n            shippingAddress\n            currency=\"INR\"\n            image=\"http://svgshare.com/i/CUz.svg\"\n            description={`Your grand Total is ₹ ${price}`}\n            amount={priceInPaise}\n            panelLabel=\"Pay Now\"\n            token={onToken}\n            stripeKey={publishableKey}\n        />\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearEntireCart: () => dispatch(clearCart()),\n});\n\nexport default connect(null,mapDispatchToProps)(StripeCheckoutButton);\n"]},"metadata":{},"sourceType":"module"}