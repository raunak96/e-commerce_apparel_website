{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //this is similar to js localStorage\n\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\nconst persistConfig = {\n  key: \"root\",\n  // we want to start storing everything from root-reducer onwards\n  storage,\n  // what storage to use to store the redux-store data\n  whitelist: [\"cart\"] // array of reducers we want to store...since User stored in firestore db no need of localStorage for it\n\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer); // this is modified root-reducer with persist config ensuring localStorage","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/redux/root-reducer.js"],"names":["combineReducers","userReducer","cartReducer","persistReducer","storage","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAiD;;AACjD,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AACL;AACbJ,EAAAA,OAFkB;AAET;AACTK,EAAAA,SAAS,EAAE,CAAC,MAAD,CAHO,CAGG;;AAHH,CAAtB;AAMA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAEV,WAD0B;AAEhCW,EAAAA,IAAI,EAAEV,WAF0B;AAGhCW,EAAAA,SAAS,EAAER,gBAHqB;AAIhCS,EAAAA,IAAI,EAAER;AAJ0B,CAAD,CAAnC;AAOA,eAAeH,cAAc,CAACI,aAAD,EAAgBG,WAAhB,CAA7B,C,CAA2D","sourcesContent":["import { combineReducers } from \"redux\";\nimport userReducer from \"./user/user.reducer\";\nimport cartReducer from \"./cart/cart.reducer\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; //this is similar to js localStorage\nimport directoryReducer from \"./directory/directory.reducer\";\nimport shopReducer from \"./shop/shop.reducer\";\n\nconst persistConfig = {\n    key: \"root\", // we want to start storing everything from root-reducer onwards\n    storage, // what storage to use to store the redux-store data\n    whitelist: [\"cart\"], // array of reducers we want to store...since User stored in firestore db no need of localStorage for it\n};\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer,\n});\n\nexport default persistReducer(persistConfig, rootReducer); // this is modified root-reducer with persist config ensuring localStorage\n"]},"metadata":{},"sourceType":"module"}