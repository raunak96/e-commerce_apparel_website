{"ast":null,"code":"var _jsxFileName = \"/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from \"react\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleCart } from \"../../redux/cart/cart.actions.js\";\n\nconst CartDropDown = ({\n  cartItems,\n  history,\n  dispatch\n}) =>\n/*#__PURE__*/\n//instead of writing mapDispatchToProps to dispatch action, we can also dispatch action using dispatch prop which is passed by connect HOC in react-redux\nReact.createElement(\"div\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 21\n  }\n})) : /*#__PURE__*/React.createElement(\"span\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 17\n  }\n}, \"Your cart is Empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push(\"/checkout\");\n    dispatch(toggleCart());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }\n}, \"Go To Checkout\"));\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/r0k01xr/react_course/e-commerce_apparel_webiste/client/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","connect","CartItem","selectCartItems","createStructuredSelector","withRouter","toggleCart","CartDropDown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,UAAR,QAAyB,kCAAzB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD;AAAA;AACjB;AAEA;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAeC,QAAD,iBACV,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,gBAKG;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANR,CADJ,eAUI,oBAAC,YAAD;AACI,EAAA,OAAO,EAAE,MAAM;AACXJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;AACH,GAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVJ,CAHJ;;AAuBA,MAAMU,eAAe,GAAGZ,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACJ,OAAO,CAACe,eAAD,CAAP,CAAyBT,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\nimport \"./cart-dropdown.styles.scss\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { connect } from \"react-redux\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport {toggleCart} from \"../../redux/cart/cart.actions.js\"\n\nconst CartDropDown = ({ cartItems, history, dispatch }) => (\n    //instead of writing mapDispatchToProps to dispatch action, we can also dispatch action using dispatch prop which is passed by connect HOC in react-redux\n\n    <div className=\"cart-dropdown\">\n        <div className=\"cart-items\">\n            {cartItems.length ? (\n                cartItems.map((cartItem) => (\n                    <CartItem key={cartItem.id} item={cartItem} />\n                ))\n            ) : (\n                <span className=\"empty-message\">Your cart is Empty</span>\n            )}\n        </div>\n        <CustomButton\n            onClick={() => {\n                history.push(\"/checkout\");\n                dispatch(toggleCart())\n            }}>\n            Go To Checkout\n        </CustomButton>\n    </div>\n);\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));\n"]},"metadata":{},"sourceType":"module"}